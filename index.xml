<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mostly Inaccurate</title><link>https://cmpcdaly,github.io/</link><description>Recent content on Mostly Inaccurate</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 12 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://cmpcdaly,github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Investigating Memory Leaks in EF Core</title><link>https://cmpcdaly,github.io/posts/investigating-memory-leaks-in-ef-core/</link><pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate><guid>https://cmpcdaly,github.io/posts/investigating-memory-leaks-in-ef-core/</guid><description>Background For reasons beyond the scope of this post, I recently implemented an interface between a front-end web application and a MySQL database to facilitate dynamic filtering against different tables and columns (It&amp;rsquo;s not as bonkers as sounds, model properties must be configured as filterable first!). The project requirements ruled out more conventional solutions like OData, and so I had to implement the bridge myself.
The implementation essentially takes two parameters; the model property name against which to filter, and the value to compare against.</description></item><item><title>Desktop Applications, OAuth and CSRF</title><link>https://cmpcdaly,github.io/posts/desktop-applications-oauth-and-csrf/</link><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid>https://cmpcdaly,github.io/posts/desktop-applications-oauth-and-csrf/</guid><description>Taking advantage of the OAuth 2 protocol is fairly trivial for mobile and web applications, as there are a number of libraries and integrations readily available. The advantage of this is that any security critical code has already been tried and tested, and is often being maintained by large organisations or open-source communities.
However, implementing third-party authorisation via OAuth2 on a desktop application can prove quite tricky. Last year I discovered a CSRF vulnerability in a popular desktop application which would allow the attacker full access to the GitHub and Bitbucket account of the victim under the following circumstances:</description></item></channel></rss>